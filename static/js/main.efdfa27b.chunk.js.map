{"version":3,"sources":["components/listFavFood.js","components/totalFavFood.js","components/foodList.js","components/navbar.js","components/randomPickResults.js","components/randomPick.js","App.js","serviceWorker.js","index.js"],"names":["ListFavFood","food","deleteFood","updateFood","listFavFood","map","className","key","type","id","value","text","onChange","e","target","icon","onClick","duration","easing","TotalFavFood","totalFood","library","add","faTrash","FoodList","this","props","addFood","handleInput","currentFood","onSubmit","placeholder","length","Component","NavBar","to","RandomPickResults","pickedFood","RandomPick","handleClick","handleDuration","App","state","setState","Date","now","foodList","n","dur","console","log","sort","Math","random","slice","preventDefault","newFav","newFavs","filteredFavFood","filter","favFoods","basename","process","exact","path","component","render","isFlipped","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.efdfa27b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./listFavFood.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; //For nice fonts\r\nimport FlipMove from \"react-flip-move\"; //For animation\r\n\r\n//Child list items component / function\r\nfunction ListFavFood({ food, deleteFood, updateFood }) {\r\n  const listFavFood = food.map((food) => {\r\n    return (\r\n      <div className=\"list-container\">\r\n        <div className=\"list\" key={food.key}>\r\n          <p>\r\n            <input\r\n              type=\"text\"\r\n              id={food.key}\r\n              value={food.text}\r\n              onChange={(e) => updateFood(e.target.value, food.key)}\r\n            />\r\n            <span>\r\n              <FontAwesomeIcon\r\n                className=\"faicons\"\r\n                icon=\"trash\"\r\n                onClick={() => deleteFood(food.key)}\r\n              />\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <FlipMove duration={300} easing=\"ease-in-out\">\r\n        {listFavFood}\r\n      </FlipMove>\r\n    </div>\r\n  );\r\n}\r\nexport default ListFavFood;\r\n","import React from \"react\";\r\nimport \"./totalFavFood.css\";\r\n\r\n//Child list items component / function\r\nfunction TotalFavFood({ totalFood }) {\r\n  return (\r\n    <div className=\"totalfavfood\">\r\n      You have added <span>{totalFood}</span> favourite food!\r\n    </div>\r\n  );\r\n}\r\nexport default TotalFavFood;\r\n","import React, { Component } from \"react\";\r\nimport ListFavFood from \"./listFavFood\";\r\nimport \"./foodList.css\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\"; //to add the icon into the library?\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\"; //for the trash icon\r\nimport TotalFavFood from \"./totalFavFood\";\r\n\r\nlibrary.add(faTrash); //to add the trash icon into the library\r\n\r\nclass FoodList extends Component {\r\n  render() {\r\n    const {\r\n      food,\r\n      deleteFood,\r\n      addFood,\r\n      handleInput,\r\n      updateFood,\r\n      currentFood,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"favFoodInput\">\r\n        What's your favourite food?\r\n        <form id=\"fav-food-form\" onSubmit={addFood}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your favourite food...\"\r\n            value={currentFood ? currentFood.text : \"\"}\r\n            onChange={handleInput}\r\n          />\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n        <TotalFavFood totalFood={food ? food.length : null} />\r\n        {food ? (\r\n          <ListFavFood\r\n            food={food}\r\n            deleteFood={deleteFood}\r\n            updateFood={updateFood}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FoodList;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./navBar.css\";\r\n\r\n//stateless functional component\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <Link to=\"/foodlist\" className=\"navbar-entry\">\r\n        Food List\r\n      </Link>\r\n      <Link to=\"/randompick\" className=\"navbar-entry\">\r\n        Random pick\r\n      </Link>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState } from \"react\";\r\nimport \"./randomPickResults.css\";\r\n\r\n//Child list items component / function\r\nfunction RandomPickResults({ pickedFood }) {\r\n  return (\r\n    <div className=\"randomPickResultsPage\">\r\n      <div>\r\n        {pickedFood &&\r\n          pickedFood.map((food) => (\r\n            <div className=\"randomPickResults\">{food.text}</div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default RandomPickResults;\r\n","import React from \"react\";\r\nimport RandomPickResults from \"./randomPickResults\";\r\nimport \"./randomPick.css\";\r\n\r\n//Child list items component / function\r\nconst RandomPick = ({\r\n  food,\r\n  handleClick,\r\n  pickedFood,\r\n  duration,\r\n  handleDuration,\r\n}) => {\r\n  return (\r\n    <div className=\"randomPickPage\">\r\n      <div className=\"randomPickContainer\">\r\n        <div className=\"promptText\">Suggest me food for the</div>\r\n        <div className=\"drop-down\">\r\n          <select value={duration} onChange={handleDuration}>\r\n            <option value=\"duration\">(Choose your duration)</option>\r\n            <option value=\"timebeing\">Time being</option>\r\n            <option value=\"day\">Day</option>\r\n            <option value=\"week\">Week</option>\r\n            <option value=\"month\">Month</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <button onClick={handleClick}>Pick</button>\r\n        </div>\r\n\r\n        <div>\r\n          {food && food.length > 0 ? (\r\n            <RandomPickResults pickedFood={pickedFood} />\r\n          ) : (\r\n            <p>You have not entered any favourite food</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default RandomPick;\r\n","import React, { Component } from \"react\";\nimport FoodList from \"./components/foodList\";\nimport NavBar from \"./components/navbar\";\nimport RandomPick from \"./components/randomPick\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nclass App extends Component {\n  state = {\n    //declaring a state where items containing text and key\n    pickedFood: [],\n    duration: \"duration\",\n    food: [],\n    currentFood: {\n      text: \"\",\n      key: \"\",\n    },\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  handleInput = (e) => {\n    this.text = e.target.value;\n    this.setState({\n      currentFood: {\n        text: e.target.value,\n        key: Date.now(),\n      },\n    });\n  };\n\n  handleClick = () => {\n    const foodList = this.state.food;\n\n    var n = 1;\n    const dur = this.state.duration;\n    console.log(dur);\n\n    if (dur === \"duration\") {\n      n = 0;\n    } else if (dur === \"timebeing\") {\n      n = 1;\n    } else if (dur === \"day\") {\n      n = 2;\n    } else if (dur === \"week\") {\n      n = 3;\n    } else {\n      n = 4;\n    }\n\n    this.setState({\n      duration: dur,\n      pickedFood: foodList.sort(() => 0.5 - Math.random()).slice(0, n),\n    });\n  };\n\n  addFood = (e) => {\n    e.preventDefault();\n    const newFav = this.state.currentFood;\n    if (newFav.text !== \"\") {\n      const newFavs = [...this.state.food, newFav];\n      this.setState({\n        food: newFavs,\n        currentFood: {\n          text: \"\",\n          key: \"\",\n        },\n      });\n    }\n  };\n\n  deleteFood = (key) => {\n    const filteredFavFood = this.state.food.filter((food) => food.key !== key);\n    this.setState({\n      food: filteredFavFood,\n    });\n  };\n\n  updateFood = (text, key) => {\n    const favFoods = this.state.food;\n    favFoods.map((food) => {\n      if (food.key === key) {\n        food.text = text;\n      }\n    });\n    this.setState({\n      food: favFoods,\n    });\n  };\n\n  handleDuration = (e) => {\n    this.setState({\n      duration: e.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL + \"/\"}>\n        <NavBar />\n        <header className=\"App-header\">\n          <Switch>\n            <Route exact path=\"/\" component={FoodList} />\n            <Route\n              path=\"/foodlist\"\n              render={(props) => (\n                <FoodList\n                  {...props}\n                  food={this.state.food}\n                  handleInput={this.handleInput}\n                  addFood={this.addFood}\n                  updateFood={this.updateFood}\n                  deleteFood={this.deleteFood}\n                  currentFood={this.state.currentFood}\n                />\n              )}\n            />\n            <Route\n              path=\"/randompick\"\n              component={() => (\n                <RandomPick\n                  food={this.state.food}\n                  handleClick={this.handleClick}\n                  pickedFood={this.state.pickedFood}\n                  duration={this.state.duration}\n                  handleDuration={this.handleDuration}\n                  isFlipped={this.isFlipped}\n                />\n              )}\n            />\n          </Switch>\n        </header>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}